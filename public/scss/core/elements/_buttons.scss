.button {
    display: inline-flex !important;
	@include font-size(button);
    @include font-weight(button);
	padding: (($button-form--height - get-line-height(button) - ($button-form--border-width * 2)) / 2) ($button--padding-h - $button-form--border-width) !important;
	height: $button-form--height !important;
    text-decoration: none !important;
	text-transform: $button--transform !important;
	color: color(button-light) !important;
    background-color: color-bg(button-light) !important;
    border-width: $button-form--border-width !important;
	border-style: $button-form--border-style !important;
	border-color: color-border(button-light) !important;
    border-radius: $button--radius !important;
    cursor: pointer !important;
    justify-content: center !important;
    text-align: center !important;
    letter-spacing: inherit !important;
    white-space: nowrap !important;
	transition: background .15s ease !important;

    &:active {
        outline: 0 !important;
    }

	&:hover {
		background-color: color-bg(button-light-hover) !important;
		border-color: color-border(button-light-hover) !important;
	}

	&.is-loading {
		position: relative !important;
		color: transparent!important;
		pointer-events: none !important;

		&::after {
			content: '' !important;
			display: block !important;
			position: absolute !important;
			width: get-line-height(button) !important;
			height: get-line-height(button) !important;
			margin-left: -(get-line-height(button) / 2) !important;
			margin-top: -(get-line-height(button) / 2) !important;
			top: 50% !important;
			left: 50% !important;
			border: $button-loading--thickness solid color(button-light) !important;
			border-radius: 50% !important;
			border-right-color: transparent !important;
			border-top-color: transparent !important;
			z-index: 1 !important;
			animation: button-loading .6s infinite linear !important;
		}
	}

	&[disabled] {
		cursor: not-allowed !important;
		color: color(button-disabled) !important;
		background-color: color-bg(button-disabled) !important;
		border-color: color-border(button-disabled) !important;

		&.is-loading {

			&::after {
				border-color: color(button-disabled) !important;
			}
		}
	}
}

.button-sm {
    padding: (($button-form-sm--height - get-line-height(button) - ($button-form--border-width * 2)) / 2) ($button-sm--padding-h - $button-form--border-width) !important;
	height: $button-form-sm--height !important;
}

.button-dark {
	color: color(button-dark) !important;
    background-color: color-bg(button-dark) !important;
	border-color: color-border(button-dark) !important;

    &:hover {
        background-color: color-bg(button-dark-hover) !important;
		border-color: color-border(button-dark-hover) !important;
    }

	&.is-loading {

		&::after {
			border-color: color(button-dark) !important;
		}
	}
}

.button-primary {
	color: color(button-primary) !important;
    background-color: color-bg(button-primary) !important;
	border-color: color-border(button-primary) !important;

    &:hover {
        background-color: color-bg(button-primary-hover) !important;
		border-color: color-border(button-primary-hover) !important;
    }

	&.is-loading {

		&::after {
			border-color: color(button-primary) !important;
		}
	}
}

.button-secondary {
	color: color(button-secondary) !important;
    background-color: color-bg(button-secondary) !important;
	border-color: color-border(button-secondary) !important;

    &:hover {
        background-color: color-bg(button-secondary-hover) !important;
		border-color: color-border(button-secondary-hover) !important;
    }

	&.is-loading {

		&::after {
			border-color: color(button-secondary) !important;
		}
	}
}

.button-block {
    display: flex !important;
	width: 100% !important;
}

.button-group {
	display: flex !important;
	flex-wrap: wrap !important;
	align-items: center !important;
	margin-right: -($button-group-padding / 2) !important;
	margin-left: -($button-group-padding / 2) !important;
	margin-top: -($button-group-padding / 2) !important;

	&:last-of-type {
		margin-bottom: -($button-group-padding / 2) !important;
	}

	&:not(:last-of-type) {
		margin-bottom: ($button-group-padding / 2) !important;
	}

	> [class*=button] {
		margin: $button-group-padding / 2 !important;
	}
}

@include media( '<=medium' ) {

	.button-wide-mobile {
		width: 100% !important;
		max-width: $button--max-size-mobile !important;
	}
}

@keyframes button-loading {
    0% {
        transform: rotate(0) !important;
    }

    100% {
        transform: rotate(360deg) !important;
    }
}
